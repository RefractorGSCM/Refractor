// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	domain "Refractor/domain"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// CommandExecutor is an autogenerated mock type for the CommandExecutor type
type CommandExecutor struct {
	mock.Mock
}

// PrepareInfractionCommands provides a mock function with given fields: ctx, infraction, action, serverID
func (_m *CommandExecutor) PrepareInfractionCommands(ctx context.Context, infraction *domain.Infraction, action string, serverID int64) (domain.CommandPayload, error) {
	ret := _m.Called(ctx, infraction, action, serverID)

	var r0 domain.CommandPayload
	if rf, ok := ret.Get(0).(func(context.Context, *domain.Infraction, string, int64) domain.CommandPayload); ok {
		r0 = rf(ctx, infraction, action, serverID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.CommandPayload)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *domain.Infraction, string, int64) error); ok {
		r1 = rf(ctx, infraction, action, serverID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RunCommands provides a mock function with given fields: payload
func (_m *CommandExecutor) RunCommands(payload domain.CommandPayload) error {
	ret := _m.Called(payload)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.CommandPayload) error); ok {
		r0 = rf(payload)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
