version: "3.7"

services:
  postgresd:
    container_name: "refractor_postgres"
    image: postgres:9.6
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER={{DB_USER}}
      - POSTGRES_PASSWORD={{DB_USER_PWD}}
      - POSTGRES_DB=kratos
    volumes:
      - ./deploy/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - intranet

  kratos-migrate:
    container_name: "refractor-kratos-migrate"
    depends_on:
      - postgresd
    image: oryd/kratos:v0.6.3-alpha.1
    environment:
      - DSN={{DSN}}
    volumes:
      - type: bind
        source: ./deploy/kratos
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    networks:
      - intranet

  kratos:
    container_name: "refractor-kratos"
    depends_on:
      - postgresd
      - kratos-migrate
    image: oryd/kratos:v0.6.3-alpha.1
    ports:
      - "4433:4433" # auth
      - "4434:4434" # admin
    restart: unless-stopped
    environment:
      - DSN={{DSN}}
      - LOG_LEVEL=trace
      - COURIER_SMTP_CONNECTION_URI={{SMTP_URI}}
      - COURIER_SMTP_FROM_ADDRESS={{SMTP_FROM}}
    command: serve -c /etc/config/kratos/kratos.yml  --watch-courier
    volumes:
      - type: bind
        source: ./deploy/kratos
        target: /etc/config/kratos
    networks:
      - intranet

  nginx:
    container_name: "refractor-nginx"
    image: nginx:1.15-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - refractor
    networks:
      - intranet
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  certbot:
    image: certbot/certbot
    container_name: refractor_certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/html --email {{EMAIL}} --agree-tos --no-eff-email --staging -d {{DOMAIN}}

  refractor:
    container_name: "refractor"
    restart: unless-stopped
    depends_on:
      - postgresd
      - kratos
    build:
      dockerfile: Dockerfile
      context: .
    environment:
      - MODE=production
      - DB_DRIVER=postgres
      - DB_SOURCE={{DSN}}
      - KRATOS_PUBLIC_ROOT=https://{{DOMAIN}}/kp
      - KRATOS_ADMIN_ROOT=http://refractor_kratos:4434
      - SMTP_CONNECTION_URI={{SMTP_URI}}
      - INITIAL_USER_EMAIL={{INITIAL_USER_EMAIL}}
      - INITIAL_USER_USERNAME={{INITIAL_USER_USERNAME}}
    volumes:
      - ./data/refractor:/opt/refractor
    networks:
      - intranet

  refractor-frontend:
    container_name: "refractor-frontend"
    depends_on:
      - refractor
      - nginx

networks:
  intranet:
