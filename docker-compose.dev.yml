version: "3.7"

services:
  postgresd:
    container_name: "refractor_postgres"
    image: postgres:9.6
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=kratosnew
    volumes:
    - ./dev/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - intranet

  kratos-migrate:
    container_name: "refractor_kratos_migrate"
    depends_on:
      - postgresd
    image: oryd/kratos:v0.6.3-alpha.1
    environment:
      - DSN=postgres://postgres:password@postgresd:5432/kratosnew?sslmode=disable&max_conns=20&max_idle_conns=4
    volumes:
      - type: bind
        source: ./dev/kratos
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.dev.yml migrate sql -e --yes
    restart: on-failure
    networks:
      - intranet

  kratos:
    container_name: "refractor_kratos"
    depends_on:
      - postgresd
      - kratos-migrate
    image: oryd/kratos:v0.6.3-alpha.1
    ports:
      - "4433:4433" # auth
      - "4434:4434" # admin
    restart: unless-stopped
    environment:
      - DSN=postgres://postgres:password@postgresd:5432/kratosnew?sslmode=disable&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
      - COURIER_SMTP_CONNECTION_URI=smtp://@mailhog:1025/
      - COURIER_SMTP_FROM_ADDRESS=noreply@refractor
    command: serve -c /etc/config/kratos/kratos.dev.yml --dev --watch-courier
    volumes:
      - type: bind
        source: ./dev/kratos
        target: /etc/config/kratos
    networks:
      - intranet

  mailhog:
    hostname: "mailhog"
    container_name: "refractor_mailhog"
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - intranet

networks:
  intranet:
